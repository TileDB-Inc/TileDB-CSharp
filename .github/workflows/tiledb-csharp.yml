name: TileDB-CSharp

on:
  push:
    tags: [ v* ]
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Linux_Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Will be checking following versions
        dotnet: ['5.0.404']
    steps:
    # Checks out repository
    - uses: actions/checkout@v2

    # Following action sets up dotnet and uses the strategy matrix to test on
    # specific versions
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    # Download tiledb
    - name: Download tiledb
      run: ./.github/scripts/install_tiledb.sh

    # DotNet build
    - name: Dotnet build for TileDB.CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet build /p:Platform=x64 -c Release sources/TileDB.CSharp

    # DotNet test
    - name: Test TileDB.CSharp 
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet test -c Release tests/TileDB.CSharp.Test

  MacOS_Test:
    runs-on: macos-latest
    strategy:
      matrix:
        # Will be checking following versions
        dotnet: ['5.0.404']
    steps:
    # Checks out repository
    - uses: actions/checkout@v2

    # Following action sets up dotnet and uses the strategy matrix to test on
    # specific versions
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    # Download tiledb
    - name: Download tiledb
      run: ./.github/scripts/install_tiledb.sh

    # DotNet build
    - name: Dotnet build for TileDB.CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet build /p:Platform=x64 -c Release sources/TileDB.CSharp

    # DotNet test
    - name: Test TileDB.CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet test -c Release tests/TileDB.CSharp.Test

  Windows_Test:
    runs-on: windows-latest
    strategy:
      matrix:
        # Will be checking following versions
        dotnet: ['5.0.404']
    steps:
    # Checks out repository
    - uses: actions/checkout@v2

    # Following action sets up dotnet and uses the strategy matrix to test on
    # specific versions
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    # Download tiledb
    - name: Download tiledb
      run: |
        $ErrorView = "NormalView"
        cd cpp
        cmake .
        cmake --build . --target install 

    # DotNet build
    - name: Dotnet build for TileDB.CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet build /p:Platform=x64 -c Release sources/TileDB.CSharp

    # DotNet test
    - name: Test TileDB.CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet test -c Release tests/TileDB.CSharp.Test
