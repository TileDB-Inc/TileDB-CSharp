name: TileDB-CSharp

on:
  push:
    tags: [ v* ]
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Build_Test_All:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Will be checking following versions
        os: [ ubuntu-latest, macos-10.15, windows-latest ]
        dotnet: [ '6.0.101' ]
    steps:
    # Checks out repository
    - uses: actions/checkout@v2

    # Following action sets up dotnet and uses the strategy matrix to test on
    # specific versions
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    # DotNet build
    - name: DotNet build for TileDB-CSharp
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        cd sources/TileDB-CSharp
        dotnet build /p:Platform=x64 -c Release

    # Build example
    - name: Build example
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet build /p:Platform=x64 -c Release examples/TileDB-CSharp-Example

    # Run example
    - name: Run example
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        dotnet run --project examples/TileDB-CSharp-Example --framework net5.0
        dotnet run --project examples/TileDB-CSharp-Example --framework net6.0

    - name: Run tests
      shell: pwsh
      run: |
        $ErrorView = "NormalView"
        cd tests/
        dotnet build /p:Platform=x64 -c Release
        dotnet run --project TileDB-CSharp-Test --framework net5.0
        dotnet run --project TileDB-CSharp-Test --framework net6.0
