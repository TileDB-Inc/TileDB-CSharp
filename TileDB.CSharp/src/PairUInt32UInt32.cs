//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TileDB {

public class PairUInt32UInt32 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PairUInt32UInt32(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PairUInt32UInt32 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PairUInt32UInt32() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          tiledbcsPINVOKE.delete_PairUInt32UInt32(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public PairUInt32UInt32() : this(tiledbcsPINVOKE.new_PairUInt32UInt32__SWIG_0(), true) {
  }

  public PairUInt32UInt32(uint first, uint second) : this(tiledbcsPINVOKE.new_PairUInt32UInt32__SWIG_1(first, second), true) {
  }

  public PairUInt32UInt32(PairUInt32UInt32 other) : this(tiledbcsPINVOKE.new_PairUInt32UInt32__SWIG_2(PairUInt32UInt32.getCPtr(other)), true) {
    if (tiledbcsPINVOKE.SWIGPendingException.Pending) throw tiledbcsPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint first {
    set {
      tiledbcsPINVOKE.PairUInt32UInt32_first_set(swigCPtr, value);
    } 
    get {
      uint ret = tiledbcsPINVOKE.PairUInt32UInt32_first_get(swigCPtr);
      return ret;
    } 
  }

  public uint second {
    set {
      tiledbcsPINVOKE.PairUInt32UInt32_second_set(swigCPtr, value);
    } 
    get {
      uint ret = tiledbcsPINVOKE.PairUInt32UInt32_second_get(swigCPtr);
      return ret;
    } 
  }

}

}
